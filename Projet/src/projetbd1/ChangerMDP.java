/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projetbd1;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import javax.swing.Timer;

public class ChangerMDP extends javax.swing.JFrame {

    private final String type;
    private final int num;
    public ChangerMDP(int numero,String table) {
        initComponents();
        num = numero;
        type = table;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblErreur = new javax.swing.JLabel();
        ancienMDP = new javax.swing.JPasswordField();
        nouvMDP1 = new javax.swing.JPasswordField();
        nouvMDP2 = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(39, 26, 54));
        jPanel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel1KeyPressed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(249, 207, 21));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2, Short.MAX_VALUE)
        );

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/images/changerpswdx350.png"))); // NOI18N

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/images/mdpActuel.png"))); // NOI18N

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/images/mdpNouvel.png"))); // NOI18N

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/images/mdpConfirm.png"))); // NOI18N

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/images/changerMdp.png"))); // NOI18N
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/images/retour.png"))); // NOI18N
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        lblErreur.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblErreur.setForeground(new java.awt.Color(255, 0, 0));

        ancienMDP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ancienMDPKeyPressed(evt);
            }
        });

        nouvMDP1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nouvMDP1KeyPressed(evt);
            }
        });

        nouvMDP2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nouvMDP2KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6))
                .addGap(0, 124, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nouvMDP2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addGap(234, 234, 234))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblErreur)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ancienMDP)
                                .addComponent(nouvMDP1))
                            .addGap(150, 150, 150)))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ancienMDP, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nouvMDP1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nouvMDP2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblErreur)
                .addGap(16, 16, 16)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        this.dispose();
        Login p1 = new Login();
        p1.setVisible(true);
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        changeMDP();
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jPanel1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel1KeyPressed
        if (evt.getKeyChar()==java.awt.event.KeyEvent.VK_ENTER){
            changeMDP();
        }
    }//GEN-LAST:event_jPanel1KeyPressed

    private void nouvMDP2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nouvMDP2KeyPressed
        if (evt.getKeyChar()==java.awt.event.KeyEvent.VK_ENTER){
            changeMDP();
        }
    }//GEN-LAST:event_nouvMDP2KeyPressed

    private void nouvMDP1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nouvMDP1KeyPressed
        if (evt.getKeyChar()==java.awt.event.KeyEvent.VK_ENTER){
            changeMDP();
        }
    }//GEN-LAST:event_nouvMDP1KeyPressed

    private void ancienMDPKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ancienMDPKeyPressed
        if (evt.getKeyChar()==java.awt.event.KeyEvent.VK_ENTER){
            changeMDP();
        }
    }//GEN-LAST:event_ancienMDPKeyPressed

    private void changeMDP(){
        char[] anc = ancienMDP.getPassword();
        char[] n1 = nouvMDP1.getPassword();
        char[] n2 = nouvMDP2.getPassword();
        String ancien = new String(anc);
        String nouv1 = new String(n1);
        String nouv2 = new String(n2);
        switch (type) {
            case "Professeur":
                if (BaseDonneeUG.verifieProf(num, ancien)){
                    if (nouv1.equals(nouv2)){
                        try{
                            String requete = "update Professeur set mdpProf='"+nouv1+"' where numProf ="+num+";";
                            BaseDonneeUG.executeDansDB(requete);
                            this.dispose();
                            Professeur page = new Professeur(num);
                            page.setVisible(true);
                        } catch (SQLException e){
                            System.err.println( e.getClass().getName() + ": " + e.getMessage() );
                            System.exit(0);
                        }
                    } else {
                        lblErreur.setText("Les 2 champs ne sont pas identiques !");
                        ActionListener effaceMessage = (ActionEvent evt) -> {
                            lblErreur.setText("");
                        };
                        Timer timer = new Timer(2000, effaceMessage);
                        timer.setRepeats(false);
                        timer.start();
                    }
                } else {
                    lblErreur.setText("Mot de passe incorrect");
                    ActionListener effaceMessage = (ActionEvent evt) -> {
                        lblErreur.setText("");
                    };
                    Timer timer = new Timer(2000, effaceMessage);
                    timer.setRepeats(false);
                    timer.start();
                }   break;
            case "Eleve":
                if (BaseDonneeUG.verifieEleve(num, ancien)){
                    if (nouv1.equals(nouv2)){
                        try{
                            String requete = "update Eleve set mdpEtu='"+nouv1+"' where numEtu ="+num+";";
                            BaseDonneeUG.executeDansDB(requete);
                            this.dispose();
                            EtudiantP1 page = new EtudiantP1(num);
                            page.setVisible(true);
                        } catch (SQLException e){
                            System.err.println( e.getClass().getName() + ": " + e.getMessage() );
                            System.exit(0);
                        }
                    } else {
                        lblErreur.setText("Les 2 champs ne sont pas identiques !");
                        ActionListener effaceMessage = (ActionEvent evt) -> {
                            lblErreur.setText("");
                        };
                        Timer timer = new Timer(2000, effaceMessage);
                        timer.setRepeats(false);
                        timer.start();
                    }
                } else {
                    lblErreur.setText("Mot de passe incorrect");
                    ActionListener effaceMessage = (ActionEvent evt) -> {
                        lblErreur.setText("");
                    };
                    Timer timer = new Timer(2000, effaceMessage);
                    timer.setRepeats(false);
                    timer.start();
                }   break;
            default:
                if (BaseDonneeUG.verifiePersonnel(num, ancien)){
                    if (nouv1.equals(nouv2)){
                        try{
                            String requete = "update Personnel set mdpPerso='"+nouv1+"' where numPerso ="+num+";";
                            BaseDonneeUG.executeDansDB(requete);
                            this.dispose();
                            Personnel page = new Personnel(num);
                            page.setVisible(true);
                        } catch (SQLException e){
                            System.err.println( e.getClass().getName() + ": " + e.getMessage() );
                            System.exit(0);
                        }
                    } else {
                        lblErreur.setText("Les 2 champs ne sont pas identiques !");
                        ActionListener effaceMessage = (ActionEvent evt) -> {
                            lblErreur.setText("");
                        };
                        Timer timer = new Timer(2000, effaceMessage);
                        timer.setRepeats(false);
                        timer.start();
                    }
                } else {
                    lblErreur.setText("Mot de passe incorrect");
                    ActionListener effaceMessage = (ActionEvent evt) -> {
                        lblErreur.setText("");
                    };
                    Timer timer = new Timer(2000, effaceMessage);
                    timer.setRepeats(false);
                    timer.start();
                }   break;
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChangerMDP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ChangerMDP(1,"Professeur").setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField ancienMDP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblErreur;
    private javax.swing.JPasswordField nouvMDP1;
    private javax.swing.JPasswordField nouvMDP2;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projetbd1;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.sql.SQLException;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author yassine
 */
public class Personnel extends javax.swing.JFrame {

    private final int numPerso;
    
    public Personnel(int numero) {
        numPerso = numero;        
        initComponents();
        metOngletAccueil();
        classeScroll.getVerticalScrollBar().setUnitIncrement(10);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField5 = new javax.swing.JTextField();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        mainPane = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        accueilTabEtu = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        accueilTabMatiere = new javax.swing.JTable();
        jPanel14 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        classeScroll = new javax.swing.JScrollPane();
        jPanel13 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();
        classeCB = new javax.swing.JComboBox<>();
        jScrollPane9 = new javax.swing.JScrollPane();
        classeTabEtu = new javax.swing.JTable();
        classeCBGroupe = new javax.swing.JComboBox<>();
        classeButAjouter = new javax.swing.JButton();
        classeButSupprimer = new javax.swing.JButton();
        classeCBEtu = new javax.swing.JComboBox<>();
        classeCBClasse = new javax.swing.JComboBox<>();
        classeTFNom = new javax.swing.JTextField();
        classeTFPrenom = new javax.swing.JTextField();
        ClasseButAjouter2 = new javax.swing.JButton();
        classeDate = new datechooser.beans.DateChooserCombo();
        jScrollPane10 = new javax.swing.JScrollPane();
        classeTabEtuLibre = new javax.swing.JTable();
        classeButSupprimer2 = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        classeTabClasse = new javax.swing.JTable();
        classeButSupprimer3 = new javax.swing.JButton();
        classeTFNomClasse = new javax.swing.JTextField();
        classeCBAnnee = new javax.swing.JComboBox<>();
        classeButAjouter3 = new javax.swing.JButton();
        jScrollPane12 = new javax.swing.JScrollPane();
        classeTabGroupe = new javax.swing.JTable();
        classeButSupprimer4 = new javax.swing.JButton();
        classeButLier = new javax.swing.JButton();
        classeCBClasse2 = new javax.swing.JComboBox<>();
        classeTFGroupe = new javax.swing.JTextField();
        classeCBClasse3 = new javax.swing.JComboBox<>();
        jPanel21 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        classeJSNbGroupe = new javax.swing.JSpinner();
        classeLblErreur = new javax.swing.JLabel();
        classeLblErreur2 = new javax.swing.JLabel();
        classeLblErreur3 = new javax.swing.JLabel();
        classeLblErreur4 = new javax.swing.JLabel();
        classeCBSexe = new javax.swing.JComboBox<>();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        matiereTab = new javax.swing.JTable();
        matiereCBProf = new javax.swing.JComboBox<>();
        matiereButAjouter1 = new javax.swing.JButton();
        matiereButSupprimer = new javax.swing.JButton();
        matiereButAjouter = new javax.swing.JButton();
        matiereCBMatiere = new javax.swing.JComboBox<>();
        matiereCBGroupe2 = new javax.swing.JComboBox<>();
        jScrollPane7 = new javax.swing.JScrollPane();
        matiereTabAssigner = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        matiereButSupprimer1 = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        matiereCBGroupe = new javax.swing.JComboBox<>();
        matiereTF = new javax.swing.JTextField();
        jPanel24 = new javax.swing.JPanel();
        jScrollPane13 = new javax.swing.JScrollPane();
        matiereTabProf = new javax.swing.JTable();
        matiereButSupprimer2 = new javax.swing.JButton();
        matiereTFNom = new javax.swing.JTextField();
        matiereTFPrenom = new javax.swing.JTextField();
        matiereCBSexe = new javax.swing.JComboBox<>();
        matiereDate = new datechooser.beans.DateChooserCombo();
        matiereButAjouter2 = new javax.swing.JButton();
        matiereLblErreur1 = new javax.swing.JLabel();
        matiereLblErreur2 = new javax.swing.JLabel();
        matiereLblErreur3 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        planningTab = new javax.swing.JTable();
        planningButSupprimer = new javax.swing.JButton();
        planningButAjouter = new javax.swing.JButton();
        planningCBDebut = new javax.swing.JComboBox<>();
        planningCBGroupe = new javax.swing.JComboBox<>();
        planningCBMatiere = new javax.swing.JComboBox<>();
        planningDate = new datechooser.beans.DateChooserCombo();
        planningCBSalle = new javax.swing.JComboBox<>();
        planningLblErreur = new javax.swing.JLabel();
        planningCBSeance = new javax.swing.JComboBox<>();
        planningCBGroupe2 = new javax.swing.JComboBox<>();
        planningButLier = new javax.swing.JButton();
        planningLblErreur2 = new javax.swing.JLabel();
        planningCBClasse = new javax.swing.JComboBox<>();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        materielButSupprimer = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        materielTab = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        accueil = new javax.swing.JLabel();
        classe = new javax.swing.JLabel();
        matiere = new javax.swing.JLabel();
        planning = new javax.swing.JLabel();
        materiel = new javax.swing.JLabel();

        jTextField5.setText("jTextField5");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane8.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mainPaneMouseClicked(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(39, 26, 54));

        jPanel12.setBackground(new java.awt.Color(249, 207, 21));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2, Short.MAX_VALUE)
        );

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/images/welcome.png"))); // NOI18N

        jLabel45.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/images/logout2.png"))); // NOI18N
        jLabel45.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel45MouseClicked(evt);
            }
        });

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/persoImages/lesEtudiants.png"))); // NOI18N

        accueilTabEtu.setBackground(new java.awt.Color(39, 26, 54));
        accueilTabEtu.setForeground(new java.awt.Color(249, 207, 21));
        accueilTabEtu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nom", "Prenom", "Classe", "Groupe"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        accueilTabEtu.setGridColor(new java.awt.Color(249, 207, 21));
        jScrollPane1.setViewportView(accueilTabEtu);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/images/lesMatieres.png"))); // NOI18N

        accueilTabMatiere.setBackground(new java.awt.Color(39, 26, 54));
        accueilTabMatiere.setForeground(new java.awt.Color(249, 207, 21));
        accueilTabMatiere.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nom", "Professeur", "Filiere"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        accueilTabMatiere.setGridColor(new java.awt.Color(249, 207, 21));
        jScrollPane2.setViewportView(accueilTabMatiere);

        jPanel14.setBackground(new java.awt.Color(249, 207, 21));

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(157, 157, 157)
                .addComponent(jLabel45))
            .addComponent(jPanel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 657, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 657, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(329, 329, 329)
                        .addComponent(jLabel9)))
                .addContainerGap(89, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(356, 356, 356))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel45))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        mainPane.addTab("Accueil", jPanel2);

        jPanel4.setBackground(new java.awt.Color(39, 26, 54));
        jPanel4.setPreferredSize(new java.awt.Dimension(783, 603));

        classeScroll.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        classeScroll.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        classeScroll.setPreferredSize(new java.awt.Dimension(783, 603));

        jPanel13.setBackground(new java.awt.Color(39, 26, 54));
        jPanel13.setPreferredSize(new java.awt.Dimension(783, 2000));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/images/gestionClassesTitle.png"))); // NOI18N

        jPanel20.setBackground(new java.awt.Color(249, 207, 21));

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2, Short.MAX_VALUE)
        );

        classeCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "classe 1", "classe 2", "Item 3", "Item 4" }));
        classeCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                classeCBItemStateChanged(evt);
            }
        });

        classeTabEtu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nom", "Prenom", "Groupe"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(classeTabEtu);

        classeCBGroupe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        classeButAjouter.setText("Ajouter");
        classeButAjouter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                classeButAjouterMouseClicked(evt);
            }
        });

        classeButSupprimer.setText("Supprimer");
        classeButSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classeButSupprimerActionPerformed(evt);
            }
        });

        classeCBEtu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        classeCBClasse.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        classeCBClasse.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                classeCBClasseItemStateChanged(evt);
            }
        });

        classeTFNom.setForeground(new java.awt.Color(204, 204, 255));
        classeTFNom.setText("Nom");
        classeTFNom.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                classeTFNomFocusGained(evt);
            }
        });

        classeTFPrenom.setForeground(new java.awt.Color(204, 204, 255));
        classeTFPrenom.setText("Prenom");
        classeTFPrenom.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                classeTFPrenomFocusGained(evt);
            }
        });

        ClasseButAjouter2.setText("Ajouter");
        ClasseButAjouter2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ClasseButAjouter2MouseClicked(evt);
            }
        });

        classeTabEtuLibre.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nom", "Prenom", "Sexe", "Date de Naissance"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane10.setViewportView(classeTabEtuLibre);

        classeButSupprimer2.setText("Supprimer");
        classeButSupprimer2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                classeButSupprimer2MouseClicked(evt);
            }
        });

        classeTabClasse.setBackground(new java.awt.Color(39, 26, 54));
        classeTabClasse.setForeground(new java.awt.Color(249, 207, 21));
        classeTabClasse.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nom", "Annee", "Groupe"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        classeTabClasse.setGridColor(new java.awt.Color(249, 207, 21));
        jScrollPane11.setViewportView(classeTabClasse);

        classeButSupprimer3.setText("Supprimer");
        classeButSupprimer3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                classeButSupprimer3MouseClicked(evt);
            }
        });

        classeTFNomClasse.setForeground(new java.awt.Color(204, 204, 255));
        classeTFNomClasse.setText("Ex : Licence Informatique");
        classeTFNomClasse.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                classeTFNomClasseFocusGained(evt);
            }
        });

        classeCBAnnee.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3" }));

        classeButAjouter3.setText("Ajouter");
        classeButAjouter3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                classeButAjouter3MouseClicked(evt);
            }
        });

        classeTabGroupe.setBackground(new java.awt.Color(39, 26, 54));
        classeTabGroupe.setForeground(new java.awt.Color(249, 207, 21));
        classeTabGroupe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Groupe", "Classe"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        classeTabGroupe.setGridColor(new java.awt.Color(249, 207, 21));
        jScrollPane12.setViewportView(classeTabGroupe);

        classeButSupprimer4.setText("Supprimer");
        classeButSupprimer4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                classeButSupprimer4MouseClicked(evt);
            }
        });

        classeButLier.setText("Lier");
        classeButLier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                classeButLierMouseClicked(evt);
            }
        });

        classeCBClasse2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        classeTFGroupe.setForeground(new java.awt.Color(204, 204, 255));
        classeTFGroupe.setText("Ex : LI1-1");
        classeTFGroupe.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                classeTFGroupeFocusGained(evt);
            }
        });

        classeCBClasse3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        classeCBClasse3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                classeCBClasse3ItemStateChanged(evt);
            }
        });

        jPanel21.setBackground(new java.awt.Color(249, 207, 21));

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2, Short.MAX_VALUE)
        );

        jPanel22.setBackground(new java.awt.Color(249, 207, 21));
        jPanel22.setPreferredSize(new java.awt.Dimension(0, 2));

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2, Short.MAX_VALUE)
        );

        jPanel23.setBackground(new java.awt.Color(249, 207, 21));
        jPanel23.setPreferredSize(new java.awt.Dimension(0, 2));

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2, Short.MAX_VALUE)
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(249, 207, 21));
        jLabel2.setText("Partie Création des Groupes");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(249, 207, 21));
        jLabel3.setText("Partie Création des Classes");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(249, 207, 21));
        jLabel4.setText("Partie Création des Eleves");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(249, 207, 21));
        jLabel5.setText("Partie Assignation des Classes");

        classeJSNbGroupe.setModel(new javax.swing.SpinnerNumberModel(2, 1, 5, 1));

        classeLblErreur.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        classeLblErreur.setForeground(new java.awt.Color(255, 0, 0));

        classeLblErreur2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        classeLblErreur2.setForeground(new java.awt.Color(255, 0, 0));

        classeLblErreur3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        classeLblErreur3.setForeground(new java.awt.Color(255, 0, 0));

        classeLblErreur4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        classeLblErreur4.setForeground(new java.awt.Color(255, 51, 0));

        classeCBSexe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "h", "f" }));

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, 790, Short.MAX_VALUE)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 626, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(classeButSupprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(classeCBEtu, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(classeCBClasse, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(classeCBGroupe, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(classeButAjouter, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addGap(182, 182, 182)
                                .addComponent(classeCBClasse3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel13Layout.createSequentialGroup()
                                        .addGap(40, 40, 40)
                                        .addComponent(classeCBClasse2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(63, 63, 63)
                                        .addComponent(classeTFGroupe, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(95, 95, 95)
                                        .addComponent(classeButLier, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 626, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(classeButSupprimer4, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jScrollPane11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 626, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel13Layout.createSequentialGroup()
                                        .addComponent(classeTFNomClasse, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(classeCBAnnee, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(63, 63, 63)
                                        .addComponent(classeJSNbGroupe, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(72, 72, 72)
                                        .addComponent(classeButAjouter3)))
                                .addGap(18, 18, 18)
                                .addComponent(classeButSupprimer3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 626, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(classeButSupprimer2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(classeTFNom, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(classeTFPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(classeDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16)
                                .addComponent(classeCBSexe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ClasseButAjouter2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(43, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(199, 199, 199))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(207, 207, 207))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(210, 210, 210))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(169, 169, 169))
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(216, 216, 216)
                        .addComponent(classeCB, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(classeLblErreur))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(classeLblErreur2))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(classeLblErreur3))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(classeLblErreur4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                    .addContainerGap(248, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(206, 206, 206)))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel15)
                .addGap(38, 38, 38)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(124, 124, 124)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(classeButSupprimer3)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(classeTFNomClasse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(classeCBAnnee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(classeButAjouter3)
                            .addComponent(classeJSNbGroupe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(classeLblErreur)
                .addGap(10, 10, 10)
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(classeCBClasse3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(classeButSupprimer4)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(classeCBClasse2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(classeTFGroupe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(classeButLier))
                .addGap(25, 25, 25)
                .addComponent(classeLblErreur2)
                .addGap(18, 18, 18)
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(classeButSupprimer2)
                        .addGap(18, 18, 18)
                        .addComponent(classeLblErreur3))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(classeTFNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(classeTFPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(classeDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(ClasseButAjouter2)
                                .addComponent(classeCBSexe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(62, 62, 62)
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(classeCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(classeCBClasse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(classeCBGroupe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(classeButAjouter)
                            .addComponent(classeCBEtu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(classeButSupprimer))
                .addGap(18, 18, 18)
                .addComponent(classeLblErreur4)
                .addContainerGap(377, Short.MAX_VALUE))
            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel13Layout.createSequentialGroup()
                    .addGap(128, 128, 128)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(1804, Short.MAX_VALUE)))
        );

        classeScroll.setViewportView(jPanel13);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(classeScroll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(classeScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        mainPane.addTab("Gestion de classes", jPanel4);

        jPanel5.setBackground(new java.awt.Color(39, 26, 54));

        matiereTab.setBackground(new java.awt.Color(39, 26, 54));
        matiereTab.setForeground(new java.awt.Color(249, 207, 21));
        matiereTab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Matiere", "Professeur", "ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        matiereTab.setGridColor(new java.awt.Color(249, 207, 21));
        jScrollPane4.setViewportView(matiereTab);

        matiereCBProf.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        matiereButAjouter1.setText("Ajouter");
        matiereButAjouter1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                matiereButAjouter1MouseClicked(evt);
            }
        });

        matiereButSupprimer.setText("Supprimer");
        matiereButSupprimer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                matiereButSupprimerMouseClicked(evt);
            }
        });

        matiereButAjouter.setText("Ajouter");
        matiereButAjouter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                matiereButAjouterMouseClicked(evt);
            }
        });

        matiereCBMatiere.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        matiereCBGroupe2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        matiereCBGroupe2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                matiereCBGroupe2ItemStateChanged(evt);
            }
        });

        matiereTabAssigner.setBackground(new java.awt.Color(39, 26, 54));
        matiereTabAssigner.setForeground(new java.awt.Color(249, 207, 21));
        matiereTabAssigner.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Groupe", "Matiere", "Professeur"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        matiereTabAssigner.setGridColor(new java.awt.Color(249, 207, 21));
        jScrollPane7.setViewportView(matiereTabAssigner);

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/images/gestionMatieresTitle.png"))); // NOI18N

        matiereButSupprimer1.setText("Supprimer");
        matiereButSupprimer1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                matiereButSupprimer1MouseClicked(evt);
            }
        });

        jPanel16.setBackground(new java.awt.Color(249, 207, 21));
        jPanel16.setPreferredSize(new java.awt.Dimension(783, 2));

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2, Short.MAX_VALUE)
        );

        jPanel19.setBackground(new java.awt.Color(249, 207, 21));
        jPanel19.setPreferredSize(new java.awt.Dimension(0, 2));

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2, Short.MAX_VALUE)
        );

        matiereCBGroupe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Groupe1", "Groupe2", "Item 3", "Item 4" }));
        matiereCBGroupe.setMinimumSize(new java.awt.Dimension(100, 20));
        matiereCBGroupe.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                matiereCBGroupeItemStateChanged(evt);
            }
        });

        matiereTF.setForeground(new java.awt.Color(204, 204, 255));
        matiereTF.setText("Inserer un nom de matiere");
        matiereTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                matiereTFFocusGained(evt);
            }
        });

        jPanel24.setBackground(new java.awt.Color(249, 207, 21));
        jPanel24.setPreferredSize(new java.awt.Dimension(0, 2));

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2, Short.MAX_VALUE)
        );

        matiereTabProf.setBackground(new java.awt.Color(39, 26, 54));
        matiereTabProf.setForeground(new java.awt.Color(249, 207, 21));
        matiereTabProf.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nom", "Prenom", "Sexe", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        matiereTabProf.setGridColor(new java.awt.Color(249, 207, 21));
        jScrollPane13.setViewportView(matiereTabProf);

        matiereButSupprimer2.setText("Supprimer");
        matiereButSupprimer2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                matiereButSupprimer2MouseClicked(evt);
            }
        });

        matiereTFNom.setForeground(new java.awt.Color(204, 204, 255));
        matiereTFNom.setText("Nom");
        matiereTFNom.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                matiereTFNomFocusGained(evt);
            }
        });

        matiereTFPrenom.setForeground(new java.awt.Color(204, 204, 255));
        matiereTFPrenom.setText("Prenom");
        matiereTFPrenom.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                matiereTFPrenomFocusGained(evt);
            }
        });

        matiereCBSexe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "h", "f" }));

        try {
            matiereDate.setDefaultPeriods(new datechooser.model.multiple.PeriodSet(new datechooser.model.multiple.Period(new java.util.GregorianCalendar(1980, 3, 8),
                new java.util.GregorianCalendar(1980, 3, 8))));
    } catch (datechooser.model.exeptions.IncompatibleDataExeption e1) {
        e1.printStackTrace();
    }
    matiereDate.setMaxDate(new java.util.GregorianCalendar(2000, 3, 8));

    matiereButAjouter2.setText("Ajouter");
    matiereButAjouter2.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            matiereButAjouter2MouseClicked(evt);
        }
    });

    matiereLblErreur1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    matiereLblErreur1.setForeground(new java.awt.Color(255, 0, 0));

    matiereLblErreur2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    matiereLblErreur2.setForeground(new java.awt.Color(255, 0, 0));

    matiereLblErreur3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    matiereLblErreur3.setForeground(new java.awt.Color(255, 0, 0));

    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
    jPanel5.setLayout(jPanel5Layout);
    jPanel5Layout.setHorizontalGroup(
        jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel5Layout.createSequentialGroup()
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGap(191, 191, 191)
                            .addComponent(matiereCBGroupe, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addGap(19, 19, 19)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(matiereLblErreur1)
                                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(26, 26, 26))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(matiereLblErreur2)
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)))
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(matiereButSupprimer1)
                                .addComponent(matiereButSupprimer))))
                    .addGap(0, 0, Short.MAX_VALUE))
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, 770, Short.MAX_VALUE)))
            .addContainerGap())
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
            .addGap(0, 0, Short.MAX_VALUE)
            .addComponent(matiereTF, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(29, 29, 29)
            .addComponent(matiereCBProf, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(32, 32, 32)
            .addComponent(matiereButAjouter1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(300, 300, 300))
        .addGroup(jPanel5Layout.createSequentialGroup()
            .addGap(29, 29, 29)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(matiereLblErreur3)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addComponent(matiereTFNom, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(matiereTFPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(matiereCBSexe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(matiereDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(56, 56, 56)
                    .addComponent(matiereButAjouter2))
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(matiereButSupprimer2)))
            .addContainerGap(74, Short.MAX_VALUE))
        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(201, 201, 201)
                                .addComponent(jLabel11))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(matiereCBGroupe2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(matiereCBMatiere, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(matiereButAjouter, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 189, Short.MAX_VALUE))
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, 770, Short.MAX_VALUE)
                    .addComponent(jPanel19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 770, Short.MAX_VALUE))
                .addContainerGap()))
    );
    jPanel5Layout.setVerticalGroup(
        jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
            .addGap(106, 106, 106)
            .addComponent(matiereCBGroupe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(25, 25, 25)
                    .addComponent(matiereButSupprimer)))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(44, 44, 44)
                    .addComponent(matiereLblErreur1)
                    .addGap(36, 36, 36)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(102, 102, 102)
                    .addComponent(matiereButSupprimer1)))
            .addGap(18, 18, 18)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(matiereButAjouter1)
                        .addComponent(matiereCBProf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(matiereTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(matiereLblErreur2)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGap(28, 28, 28)
                            .addComponent(matiereButSupprimer2)))
                    .addGap(45, 45, 45)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(matiereTFNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(matiereTFPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(matiereCBSexe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(matiereDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addComponent(matiereButAjouter2))
            .addGap(18, 18, 18)
            .addComponent(matiereLblErreur3)
            .addContainerGap(59, Short.MAX_VALUE))
        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(210, 210, 210)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(matiereCBGroupe2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(matiereButAjouter)
                    .addComponent(matiereCBMatiere, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(542, Short.MAX_VALUE)))
    );

    jScrollPane3.setViewportView(jPanel5);

    javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
    jPanel8.setLayout(jPanel8Layout);
    jPanel8Layout.setHorizontalGroup(
        jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane3)
    );
    jPanel8Layout.setVerticalGroup(
        jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE)
    );

    mainPane.addTab("Gestion de matieres", jPanel8);

    jPanel11.setBackground(new java.awt.Color(39, 26, 54));

    jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/persoImages/gestionPlanningsTitle.png"))); // NOI18N

    jPanel17.setBackground(new java.awt.Color(249, 207, 21));

    javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
    jPanel17.setLayout(jPanel17Layout);
    jPanel17Layout.setHorizontalGroup(
        jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGap(0, 0, Short.MAX_VALUE)
    );
    jPanel17Layout.setVerticalGroup(
        jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGap(0, 2, Short.MAX_VALUE)
    );

    planningTab.setBackground(new java.awt.Color(39, 26, 54));
    planningTab.setForeground(new java.awt.Color(249, 207, 21));
    planningTab.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null}
        },
        new String [] {
            "Date", "ID", "Groupe", "Matiere", "Salle", "Debut", "Fin"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false, false, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    planningTab.setGridColor(new java.awt.Color(249, 207, 21));
    jScrollPane5.setViewportView(planningTab);

    planningButSupprimer.setText("Supprimer");
    planningButSupprimer.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            planningButSupprimerMouseClicked(evt);
        }
    });

    planningButAjouter.setText("Ajouter");
    planningButAjouter.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            planningButAjouterMouseClicked(evt);
        }
    });

    planningCBDebut.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "8", "10", "14", "16" }));
    planningCBDebut.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            planningCBDebutItemStateChanged(evt);
        }
    });

    planningCBGroupe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
    planningCBGroupe.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            planningCBGroupeItemStateChanged(evt);
        }
    });

    planningCBMatiere.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

    try {
        planningDate.setDefaultPeriods(new datechooser.model.multiple.PeriodSet(new datechooser.model.multiple.Period(new java.util.GregorianCalendar(2018, 3, 8),
            new java.util.GregorianCalendar(2018, 3, 8))));
} catch (datechooser.model.exeptions.IncompatibleDataExeption e1) {
    e1.printStackTrace();
    }
    planningDate.setMinDate(new java.util.GregorianCalendar(2018, 3, 8));
    planningDate.addSelectionChangedListener(new datechooser.events.SelectionChangedListener() {
        public void onSelectionChange(datechooser.events.SelectionChangedEvent evt) {
            planningDateOnSelectionChange(evt);
        }
    });

    planningCBSalle.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

    planningLblErreur.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    planningLblErreur.setForeground(new java.awt.Color(255, 0, 0));

    planningCBSeance.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
    planningCBSeance.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            planningCBSeanceItemStateChanged(evt);
        }
    });

    planningCBGroupe2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

    planningButLier.setText("Lier");
    planningButLier.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            planningButLierMouseClicked(evt);
        }
    });

    planningLblErreur2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    planningLblErreur2.setForeground(new java.awt.Color(255, 0, 0));

    planningCBClasse.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
    planningCBClasse.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            planningCBClasseItemStateChanged(evt);
        }
    });

    javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
    jPanel11.setLayout(jPanel11Layout);
    jPanel11Layout.setHorizontalGroup(
        jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(jPanel11Layout.createSequentialGroup()
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel11Layout.createSequentialGroup()
                    .addGap(201, 201, 201)
                    .addComponent(jLabel12))
                .addGroup(jPanel11Layout.createSequentialGroup()
                    .addGap(36, 36, 36)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel11Layout.createSequentialGroup()
                            .addComponent(planningCBGroupe, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(planningDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(planningCBDebut, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(planningCBMatiere, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(planningCBSalle, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(planningLblErreur)
                        .addGroup(jPanel11Layout.createSequentialGroup()
                            .addComponent(planningCBSeance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(26, 26, 26)
                            .addComponent(planningCBGroupe2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(40, 40, 40)
                            .addComponent(planningButLier))
                        .addComponent(planningLblErreur2))
                    .addGap(34, 34, 34)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(planningButAjouter, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(planningButSupprimer)))
                .addGroup(jPanel11Layout.createSequentialGroup()
                    .addGap(240, 240, 240)
                    .addComponent(planningCBClasse, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap(69, Short.MAX_VALUE))
    );
    jPanel11Layout.setVerticalGroup(
        jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel11Layout.createSequentialGroup()
            .addGap(19, 19, 19)
            .addComponent(jLabel12)
            .addGap(18, 18, 18)
            .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel11Layout.createSequentialGroup()
                    .addGap(186, 186, 186)
                    .addComponent(planningButSupprimer))
                .addGroup(jPanel11Layout.createSequentialGroup()
                    .addGap(28, 28, 28)
                    .addComponent(planningCBClasse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(planningDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(planningCBGroupe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(planningCBDebut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(planningButAjouter)
                    .addComponent(planningCBMatiere, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(planningCBSalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(planningLblErreur)
            .addGap(44, 44, 44)
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(planningCBSeance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(planningCBGroupe2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(planningButLier))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(planningLblErreur2)
            .addGap(19, 19, 19))
    );

    javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
    jPanel10.setLayout(jPanel10Layout);
    jPanel10Layout.setHorizontalGroup(
        jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    jPanel10Layout.setVerticalGroup(
        jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    mainPane.addTab("Gestion de planning", jPanel10);

    jPanel7.setBackground(new java.awt.Color(39, 26, 54));

    jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/persoImages/gestionMaterielsTitle.png"))); // NOI18N

    jPanel18.setBackground(new java.awt.Color(249, 207, 21));

    javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
    jPanel18.setLayout(jPanel18Layout);
    jPanel18Layout.setHorizontalGroup(
        jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGap(0, 0, Short.MAX_VALUE)
    );
    jPanel18Layout.setVerticalGroup(
        jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGap(0, 2, Short.MAX_VALUE)
    );

    jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/persoImages/materielsReserves.png"))); // NOI18N

    materielButSupprimer.setText("Annuler la reservation");
    materielButSupprimer.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            materielButSupprimerMouseClicked(evt);
        }
    });

    materielTab.setBackground(new java.awt.Color(39, 26, 54));
    materielTab.setForeground(new java.awt.Color(249, 207, 21));
    materielTab.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null}
        },
        new String [] {
            "ID", "Date", "Materiel", "Professeur", "Quantite"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    materielTab.setGridColor(new java.awt.Color(249, 207, 21));
    jScrollPane6.setViewportView(materielTab);

    javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
    jPanel7.setLayout(jPanel7Layout);
    jPanel7Layout.setHorizontalGroup(
        jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(jPanel7Layout.createSequentialGroup()
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGap(201, 201, 201)
                    .addComponent(jLabel13))
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGap(292, 292, 292)
                    .addComponent(jLabel14))
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGap(37, 37, 37)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(34, 34, 34)
                    .addComponent(materielButSupprimer)))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel7Layout.setVerticalGroup(
        jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel7Layout.createSequentialGroup()
            .addGap(19, 19, 19)
            .addComponent(jLabel13)
            .addGap(18, 18, 18)
            .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(jLabel14)
            .addGap(42, 42, 42)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGap(96, 96, 96)
                    .addComponent(materielButSupprimer)))
            .addContainerGap(173, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
    jPanel6.setLayout(jPanel6Layout);
    jPanel6Layout.setHorizontalGroup(
        jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    jPanel6Layout.setVerticalGroup(
        jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    mainPane.addTab("Gestion de materiels", jPanel6);

    jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/persoImages/logoM.png"))); // NOI18N
    jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(249, 207, 21)));

    accueil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/persoImages/accueilClicked.png"))); // NOI18N
    accueil.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(249, 207, 21)));
    accueil.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            accueilMouseClicked(evt);
        }
    });

    classe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/persoImages/gestionClasses.png"))); // NOI18N
    classe.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(249, 207, 21)));
    classe.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            classeMouseClicked(evt);
        }
    });

    matiere.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/persoImages/gestionMatieres.png"))); // NOI18N
    matiere.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(249, 207, 21)));
    matiere.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            matiereMouseClicked(evt);
        }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(accueil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(classe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(matiere, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addGap(0, 0, 0)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(0, 0, 0)
            .addComponent(accueil)
            .addGap(0, 0, 0)
            .addComponent(classe, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(0, 0, 0)
            .addComponent(matiere, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGap(0, 0, 0))
    );

    planning.setBackground(new java.awt.Color(249, 207, 21));
    planning.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/persoImages/gestionPlanning.png"))); // NOI18N
    planning.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(249, 207, 21)));
    planning.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            planningMouseClicked(evt);
        }
    });

    materiel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/persoImages/gestionMateriels.png"))); // NOI18N
    materiel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(249, 207, 21)));
    materiel.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            materielMouseClicked(evt);
        }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(planning, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(materiel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGap(0, 0, 0)
            .addComponent(mainPane))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(0, 0, 0)
            .addComponent(planning)
            .addGap(0, 0, 0)
            .addComponent(materiel))
        .addComponent(mainPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mainPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainPaneMouseClicked
        switch (mainPane.getSelectedIndex()) {
            case 0:
                metOngletAccueil();
                break;
            case 1:
                metOngletClasse();
                break;
            case 2:
                metOngletMatiere();
                break;
            case 3:
                metOngletPlanning();
                break;
            default:
                metOngletMateriel();
                break;
        }
    }//GEN-LAST:event_mainPaneMouseClicked

    private void accueilMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accueilMouseClicked
        mainPane.setSelectedIndex(0);
        metOngletAccueil();
    }//GEN-LAST:event_accueilMouseClicked

    private void classeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_classeMouseClicked
        mainPane.setSelectedIndex(1);
        metOngletClasse();
    }//GEN-LAST:event_classeMouseClicked

    private void matiereMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_matiereMouseClicked
        mainPane.setSelectedIndex(2);
        metOngletMatiere();
    }//GEN-LAST:event_matiereMouseClicked

    private void planningMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_planningMouseClicked
        mainPane.setSelectedIndex(3);
        metOngletPlanning();
    }//GEN-LAST:event_planningMouseClicked

    private void materielMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_materielMouseClicked
        mainPane.setSelectedIndex(4);
        metOngletMateriel();
    }//GEN-LAST:event_materielMouseClicked

    private void planningButSupprimerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_planningButSupprimerMouseClicked
        int ligne = planningTab.getSelectedRow();
        String idSeance = planningTab.getValueAt(ligne,1).toString();
        String requete = "delete from Seance where idSeance="+idSeance+";";
        try{
            BaseDonneeUG.executeDansDB(requete);
            affichePlanning();
            String gro = planningCBGroupe.getSelectedItem().toString();
            String debut = planningCBDebut.getSelectedItem().toString();
            requete = "select nomMatiere from Matiere natural join Enseigner natural join Groupe where nomGroupe ='"+gro+"' except select nomMatiere from Matiere where numProf in (select numProf from Seance natural join Matiere natural join Professeur where dateSeance ='"+recupereDate()+"' and debutSeance ="+debut+");";
            BaseDonneeUG.metDansComboBox(requete,planningCBMatiere);
            idSeance = planningCBSeance.getSelectedItem().toString();
            requete = "select nomGroupe from Groupe natural join Enseigner where nomMatiere = (select nomMatiere from Seance where idSeance = "+idSeance+") except select nomGroupe from Groupe natural join Avoir natural join Seance where dateSeance = (select dateSeance from Seance where idSeance = "+idSeance+") and debutSeance =(select debutSeance from Seance where idSeance ="+idSeance+");";
            BaseDonneeUG.metDansComboBox(requete, planningCBGroupe2);
        } catch (SQLException ex){
            System.err.println( ex.getClass().getName() + ": " + ex.getMessage() );
            System.exit(0);
        }
    }//GEN-LAST:event_planningButSupprimerMouseClicked

    private void planningButAjouterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_planningButAjouterMouseClicked
       try{
            String date = recupereDate();
            String gro = planningCBGroupe.getSelectedItem().toString();
            String requete = "select idGroupe from Groupe where nomGroupe = '"+gro+"';";
            int idGroupe = BaseDonneeUG.recupere(requete);
            int idSeance = BaseDonneeUG.recupere("select max(idSeance)+1 from Seance;");
            String debut = planningCBDebut.getSelectedItem().toString();
            String nomMatiere = planningCBMatiere.getSelectedItem().toString();
            String idSalle = planningCBSalle.getSelectedItem().toString();
            System.out.println(idSeance+"-"+date+"-"+debut+"-"+idSalle+"-"+nomMatiere);
            System.out.println(idSeance+"-"+gro);
            
            requete = "insert into Seance values("+idSeance+",'"+date+"',"+debut+",'"+idSalle+"','"+nomMatiere+"')";
            BaseDonneeUG.executeDansDB(requete);
            requete = "insert into Avoir values("+idGroupe+","+idSeance+");";
            BaseDonneeUG.executeDansDB(requete);
            
            affichePlanning();
            date = recupereDate();
            debut = planningCBDebut.getSelectedItem().toString();
            requete = "select distinct idSalle from Salle natural join Seance where idSalle not in (select idSalle from Seance where dateSeance ='"+date+"' and debutSeance="+debut+");";
            BaseDonneeUG.metDansComboBox(requete,planningCBSalle);
            gro = planningCBGroupe.getSelectedItem().toString();   
            requete = "select nomMatiere from Matiere natural join Enseigner natural join Groupe where nomGroupe ='"+gro+"' except select nomMatiere from Matiere where numProf in (select numProf from Seance natural join Matiere natural join Professeur where dateSeance ='"+recupereDate()+"' and debutSeance ="+debut+");";
            BaseDonneeUG.metDansComboBox(requete,planningCBMatiere);
            String id = planningCBSeance.getSelectedItem().toString();
            requete = "select nomGroupe from Groupe natural join Enseigner where nomMatiere = (select nomMatiere from Seance where idSeance = "+id+") except select nomGroupe from Groupe natural join Avoir natural join Seance where dateSeance = (select dateSeance from Seance where idSeance = "+id+") and debutSeance =(select debutSeance from Seance where idSeance ="+id+");";
            BaseDonneeUG.metDansComboBox(requete, planningCBGroupe2);
            requete = "select idSeance from Seance";
            BaseDonneeUG.metDansComboBox(requete,planningCBSeance);
        } catch ( SQLException| NullPointerException e) {
            
            planningLblErreur.setText("Erreur dans la création de la séance !");
            ActionListener effaceMessage = (ActionEvent evt1) -> {
                planningLblErreur.setText("");
            };
            Timer timer = new Timer(2000, effaceMessage);
            timer.setRepeats(false);
            timer.start();
            
            
        }
        
    }//GEN-LAST:event_planningButAjouterMouseClicked

    private void planningCBGroupeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_planningCBGroupeItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED){
            String gro = planningCBGroupe.getSelectedItem().toString();
            String debut = planningCBDebut.getSelectedItem().toString();
            String requete = "select nomMatiere from Matiere natural join Enseigner natural join Groupe where nomGroupe ='"+gro+"' except select nomMatiere from Matiere where numProf in (select numProf from Seance natural join Matiere natural join Professeur where dateSeance ='"+recupereDate()+"' and debutSeance ="+debut+");";
            BaseDonneeUG.metDansComboBox(requete,planningCBMatiere);
        }
    }//GEN-LAST:event_planningCBGroupeItemStateChanged

    private String recupereDate(){
        Calendar date = planningDate.getSelectedDate();
        String mois;
        if (date.get(Calendar.MONTH)+1<10){
            mois = "0"+(date.get(Calendar.MONTH)+1);
        } else {
            mois = ""+(date.get(Calendar.MONTH)+1);
        }
        String jour;
        if (date.get(Calendar.DAY_OF_MONTH)<10){
            jour = "0"+date.get(Calendar.DAY_OF_MONTH);
        } else {
            jour = ""+date.get(Calendar.DAY_OF_MONTH);
        }
        String dateReel= ""+date.get(Calendar.YEAR)+"-"+mois+"-"+jour;
        return dateReel;
    }
    private void planningCBDebutItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_planningCBDebutItemStateChanged
        String date = recupereDate();
        String debut = planningCBDebut.getSelectedItem().toString();
        String requete = "select distinct idSalle from Salle natural join Seance where idSalle not in (select idSalle from Seance where dateSeance ='"+date+"' and debutSeance="+debut+");";
        BaseDonneeUG.metDansComboBox(requete,planningCBSalle);
        String gro = planningCBGroupe.getSelectedItem().toString();   
        requete = "select nomMatiere from Matiere natural join Enseigner natural join Groupe where nomGroupe ='"+gro+"' except select nomMatiere from Matiere where numProf in (select numProf from Seance natural join Matiere natural join Professeur where dateSeance ='"+recupereDate()+"' and debutSeance ="+debut+");";
        BaseDonneeUG.metDansComboBox(requete,planningCBMatiere);
    }//GEN-LAST:event_planningCBDebutItemStateChanged

    private void planningDateOnSelectionChange(datechooser.events.SelectionChangedEvent evt) {//GEN-FIRST:event_planningDateOnSelectionChange
        String date = recupereDate();
        String debut = planningCBDebut.getSelectedItem().toString();
        String requete = "select distinct idSalle from Salle natural join Seance where idSalle not in (select idSalle from Seance where dateSeance ='"+date+"' and debutSeance="+debut+");";
        BaseDonneeUG.metDansComboBox(requete,planningCBSalle);
        String gro = planningCBGroupe.getSelectedItem().toString();   
        requete = "select nomMatiere from Matiere natural join Enseigner natural join Groupe where nomGroupe ='"+gro+"' except select nomMatiere from Matiere where numProf in (select numProf from Seance natural join Matiere natural join Professeur where dateSeance ='"+recupereDate()+"' and debutSeance ="+debut+");";
        BaseDonneeUG.metDansComboBox(requete,planningCBMatiere);
    }//GEN-LAST:event_planningDateOnSelectionChange

    private void planningCBSeanceItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_planningCBSeanceItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED){
            String idSeance = planningCBSeance.getSelectedItem().toString();
            String requete = "select nomGroupe from Groupe natural join Enseigner where nomMatiere = (select nomMatiere from Seance where idSeance = "+idSeance+") except select nomGroupe from Groupe natural join Avoir natural join Seance where dateSeance = (select dateSeance from Seance where idSeance = "+idSeance+") and debutSeance =(select debutSeance from Seance where idSeance ="+idSeance+");";
            BaseDonneeUG.metDansComboBox(requete, planningCBGroupe2);
        }
    }//GEN-LAST:event_planningCBSeanceItemStateChanged

    private void planningButLierMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_planningButLierMouseClicked
        try{
            String idSeance = planningCBSeance.getSelectedItem().toString();
        
            String gro = planningCBGroupe2.getSelectedItem().toString();
            String requete = "select idGroupe from Groupe where nomGroupe = '"+gro+"';";
            int idGroupe = BaseDonneeUG.recupere(requete);
            requete = "insert into Avoir values ("+idGroupe+","+idSeance+");";
            BaseDonneeUG.executeDansDB(requete);
            affichePlanning();
            String date = recupereDate();
            String debut = planningCBDebut.getSelectedItem().toString();
            requete = "select distinct idSalle from Salle natural join Seance where idSalle not in (select idSalle from Seance where dateSeance ='"+date+"' and debutSeance="+debut+");";
            BaseDonneeUG.metDansComboBox(requete,planningCBSalle);
            gro = planningCBGroupe.getSelectedItem().toString();   
            requete = "select nomMatiere from Matiere natural join Enseigner natural join Groupe where nomGroupe ='"+gro+"' except select nomMatiere from Matiere where numProf in (select numProf from Seance natural join Matiere natural join Professeur where dateSeance ='"+recupereDate()+"' and debutSeance ="+debut+");";
            BaseDonneeUG.metDansComboBox(requete,planningCBMatiere);
            String id = planningCBSeance.getSelectedItem().toString();
            requete = "select nomGroupe from Groupe natural join Enseigner where nomMatiere = (select nomMatiere from Seance where idSeance = "+id+") except select nomGroupe from Groupe natural join Avoir natural join Seance where dateSeance = (select dateSeance from Seance where idSeance = "+id+") and debutSeance =(select debutSeance from Seance where idSeance ="+id+");";
            BaseDonneeUG.metDansComboBox(requete, planningCBGroupe2);
            requete = "select idSeance from Seance";
            BaseDonneeUG.metDansComboBox(requete,planningCBSeance);
        } catch ( SQLException| NullPointerException e) {
            
            planningLblErreur2.setText("Erreur dans l'assignation de la séance !");
            ActionListener effaceMessage = (ActionEvent evt1) -> {
                planningLblErreur2.setText("");
            };
            Timer timer = new Timer(2000, effaceMessage);
            timer.setRepeats(false);
            timer.start();
        }
    }//GEN-LAST:event_planningButLierMouseClicked

    private void materielButSupprimerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_materielButSupprimerMouseClicked
        int ligne = materielTab.getSelectedRow();
        String idReservation = materielTab.getValueAt(ligne,0).toString();
        String requete = "delete from Reserver where idReservation="+idReservation+";";
        try{
            BaseDonneeUG.executeDansDB(requete);
            afficheMateriel();
        } catch (SQLException ex){
            System.err.println( ex.getClass().getName() + ": " + ex.getMessage() );
            System.exit(0);
        }
    }//GEN-LAST:event_materielButSupprimerMouseClicked

    private void classeCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_classeCBItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED){
            String cla = classeCB.getSelectedItem().toString();
            String requete = "select numEtu as ID, nomEtu as Nom, prenomEtu as Prenom, nomGroupe as Groupe from Groupe natural join Classe natural join Eleve where numPerso ="+numPerso+" and nomClasse||' Annee '||anneeClasse = '"+cla+"';";
            BaseDonneeUG.metDansJTable(requete, classeTabEtu,30,4);
        }
    }//GEN-LAST:event_classeCBItemStateChanged

    private void classeButAjouterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_classeButAjouterMouseClicked
        try {
            String elmt = classeCBEtu.getSelectedItem().toString();
            String requete = "select numEtu from Eleve where numEtu||' '||nomEtu||' '||prenomEtu = '"+elmt+"';";
            int numeroEtu = BaseDonneeUG.recupere(requete);
            elmt = classeCBClasse.getSelectedItem().toString();
            requete = "select idClasse from Classe where nomClasse||' Annee '||anneeClasse='"+elmt+"';";
            int idClasse = BaseDonneeUG.recupere(requete);
            elmt = classeCBGroupe.getSelectedItem().toString();
            requete = "select idGroupe from Groupe where nomGroupe = '"+elmt+"';";
            int idGroupe = BaseDonneeUG.recupere(requete);

            requete = "update Eleve set idClasse = "+idClasse+" where numEtu = "+numeroEtu+";";
            BaseDonneeUG.executeDansDB(requete);
            requete = "update Eleve set idGroupe = "+idGroupe+" where numEtu = "+numeroEtu+";";
            BaseDonneeUG.executeDansDB(requete);
            resetCBEleve();
            resetCBClasse();
            resetCBGroupe();
            afficheClasse();
            afficheEleve();
            afficheTouteClasse();
            afficheGroupe();
        } catch ( SQLException| NullPointerException e) {
            classeLblErreur4.setText("Erreur dans l'insertion de l'Eleve");
            ActionListener effaceMessage = (ActionEvent evt1) -> {
                classeLblErreur4.setText("");
            };
            Timer timer = new Timer(2000, effaceMessage);
            timer.setRepeats(false);
            timer.start();
        }
    }//GEN-LAST:event_classeButAjouterMouseClicked

    private void classeButSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classeButSupprimerActionPerformed
        int ligne = classeTabEtu.getSelectedRow();
        String numEtu = classeTabEtu.getValueAt(ligne,0).toString();
        String requete = "update Eleve set idClasse = null where numEtu ="+numEtu+";";
        String requete2 = "update Eleve set idGroupe = null where numEtu ="+numEtu+";";
        try{
            BaseDonneeUG.executeDansDB(requete);
            BaseDonneeUG.executeDansDB(requete2);
            resetCBEleve();
            resetCBClasse();
            resetCBGroupe();
            afficheClasse();
            afficheEleve();
            afficheTouteClasse();
            afficheGroupe();
        } catch (SQLException ex){
            System.err.println( ex.getClass().getName() + ":" + ex.getMessage() );
            System.exit(0);
        }
    }//GEN-LAST:event_classeButSupprimerActionPerformed

    private void classeCBClasseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_classeCBClasseItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED){
            resetCBGroupe();
        }
    }//GEN-LAST:event_classeCBClasseItemStateChanged

    private void classeButSupprimer3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_classeButSupprimer3MouseClicked
        int ligne = classeTabClasse.getSelectedRow();
        String id = classeTabClasse.getValueAt(ligne,0).toString();
        String requete = "delete from Classe where idClasse ="+id+";";
        try{
            BaseDonneeUG.executeDansDB(requete);
            resetCBEleve();
            resetCBClasse();
            resetCBGroupe();
            afficheClasse();
            afficheEleve();
            afficheTouteClasse();
            afficheGroupe();
        } catch (SQLException ex){
            System.err.println( ex.getClass().getName() + ":" + ex.getMessage() );
            System.exit(0);
        }
    }//GEN-LAST:event_classeButSupprimer3MouseClicked

    private void classeButSupprimer4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_classeButSupprimer4MouseClicked
        int ligne = classeTabGroupe.getSelectedRow();
        String id = classeTabGroupe.getValueAt(ligne,0).toString();
        String requete = "delete from Groupe where idGroupe ="+id+";";
        try{
            BaseDonneeUG.executeDansDB(requete);
            resetCBEleve();
            resetCBClasse();
            resetCBGroupe();
            afficheClasse();
            afficheEleve();
            afficheTouteClasse();
            afficheGroupe();
        } catch (SQLException ex){
            System.err.println( ex.getClass().getName() + ":" + ex.getMessage() );
            System.exit(0);
        }
    }//GEN-LAST:event_classeButSupprimer4MouseClicked

    private void classeButSupprimer2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_classeButSupprimer2MouseClicked
        int ligne = classeTabEtuLibre.getSelectedRow();
        String id = classeTabEtuLibre.getValueAt(ligne,0).toString();
        String requete = "delete from Eleve where numEtu ="+id+";";
        try{
            BaseDonneeUG.executeDansDB(requete);
            resetCBEleve();
            resetCBClasse();
            resetCBGroupe();
            afficheClasse();
            afficheEleve();
            afficheTouteClasse();
            afficheGroupe();
        } catch (SQLException ex){
            System.err.println( ex.getClass().getName() + ":" + ex.getMessage() );
            System.exit(0);
        }
    }//GEN-LAST:event_classeButSupprimer2MouseClicked

    private void classeButAjouter3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_classeButAjouter3MouseClicked
        try{
            String nom = classeTFNomClasse.getText();
            String annee = classeCBAnnee.getSelectedItem().toString();
            String nbGroupe = classeJSNbGroupe.getValue().toString();
            int id = BaseDonneeUG.recupere("select max(idClasse)+1 from Classe");
            String requete = "insert into Classe values("+id+",'"+nom+"',"+nbGroupe+","+annee+","+numPerso+");";
            BaseDonneeUG.executeDansDB(requete);
            resetCBEleve();
            resetCBClasse();
            resetCBGroupe();
            afficheClasse();
            afficheEleve();
            afficheTouteClasse();
            afficheGroupe();
        } catch ( SQLException| NullPointerException e) {
            classeLblErreur.setText("Erreur dans l'insertion de la Classe");
            ActionListener effaceMessage = (ActionEvent evt1) -> {
                classeLblErreur.setText("");
            };
            Timer timer = new Timer(2000, effaceMessage);
            timer.setRepeats(false);
            timer.start();
        }   
    }//GEN-LAST:event_classeButAjouter3MouseClicked

    private void classeButLierMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_classeButLierMouseClicked
        try{
            String cla = classeCBClasse2.getSelectedItem().toString();
            String requete = "select idClasse from Classe where nomClasse||' Annee '||anneeClasse ='"+cla+"';";
            int idClasse = BaseDonneeUG.recupere(requete);
            String nomGroupe = classeTFGroupe.getText();
            int idGroupe = BaseDonneeUG.recupere("select max(idGroupe)+1 from Groupe;");
            requete = "insert into Groupe values ("+idGroupe+",'"+nomGroupe+"',"+idClasse+");";
            BaseDonneeUG.executeDansDB(requete);
            resetCBEleve();
            resetCBClasse();
            resetCBGroupe();
            afficheClasse();
            afficheEleve();
            afficheTouteClasse();
            afficheGroupe();
        } catch ( SQLException| NullPointerException e) {
            classeLblErreur2.setText("Erreur dans la création du groupe");
            ActionListener effaceMessage = (ActionEvent evt1) -> {
                classeLblErreur2.setText("");
            };
            Timer timer = new Timer(2000, effaceMessage);
            timer.setRepeats(false);
            timer.start();
        }
    }//GEN-LAST:event_classeButLierMouseClicked
    
    private String recupereDateClasse(){
        Calendar date = classeDate.getSelectedDate();
        String mois;
        if (date.get(Calendar.MONTH)+1<10){
            mois = "0"+(date.get(Calendar.MONTH)+1);
        } else {
            mois = ""+(date.get(Calendar.MONTH)+1);
        }
        String jour;
        if (date.get(Calendar.DAY_OF_MONTH)<10){
            jour = "0"+date.get(Calendar.DAY_OF_MONTH);
        } else {
            jour = ""+date.get(Calendar.DAY_OF_MONTH);
        }
        String dateReel= ""+date.get(Calendar.YEAR)+"-"+mois+"-"+jour;
        return dateReel;
    }
    
    private void ClasseButAjouter2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClasseButAjouter2MouseClicked
        try{
            String date = recupereDateClasse();
            String nom = classeTFNom.getText();
            String prenom = classeTFPrenom.getText();
            String sexe = classeCBSexe.getSelectedItem().toString();
            int numEtu = BaseDonneeUG.recupere("select max(numEtu)+1 from Eleve;");
            String requete = "insert into Eleve values ("+numEtu+",'"+ nom+"','"+prenom+"','"+sexe+"','"+date+"',null,null,null,null,null);";
            BaseDonneeUG.executeDansDB(requete);
            resetCBEleve();
            resetCBClasse();
            resetCBGroupe();
            afficheClasse();
            afficheEleve();
            afficheTouteClasse();
            afficheGroupe();
        } catch ( SQLException| NullPointerException e) {
            classeLblErreur3.setText("Erreur dans la création de l'Eleve");
            ActionListener effaceMessage = (ActionEvent evt1) -> {
                classeLblErreur3.setText("");
            };
            Timer timer = new Timer(2000, effaceMessage);
            timer.setRepeats(false);
            timer.start();
        }
    }//GEN-LAST:event_ClasseButAjouter2MouseClicked

    private void classeCBClasse3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_classeCBClasse3ItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED){
            String cla = classeCBClasse3.getSelectedItem().toString();
            String requete = "select idGroupe as ID, nomGroupe as Groupe, nomClasse||' annee '||anneeClasse as Classe from Groupe natural join Classe where nomClasse||' Annee '||anneeClasse = '"+cla+"';";
            BaseDonneeUG.metDansJTable(requete,classeTabGroupe,30,3);
        }
    }//GEN-LAST:event_classeCBClasse3ItemStateChanged

    private void classeTFGroupeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_classeTFGroupeFocusGained
        classeTFGroupe.setText("");
        classeTFGroupe.setForeground(Color.black);
    }//GEN-LAST:event_classeTFGroupeFocusGained

    private void classeTFNomFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_classeTFNomFocusGained
        classeTFNom.setText("");
        classeTFNom.setForeground(Color.black);
    }//GEN-LAST:event_classeTFNomFocusGained

    private void classeTFPrenomFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_classeTFPrenomFocusGained
        classeTFPrenom.setText("");
        classeTFPrenom.setForeground(Color.black);
    }//GEN-LAST:event_classeTFPrenomFocusGained

    private void classeTFNomClasseFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_classeTFNomClasseFocusGained
        classeTFNomClasse.setText("");
        classeTFNomClasse.setForeground(Color.black);
    }//GEN-LAST:event_classeTFNomClasseFocusGained

    private void planningCBClasseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_planningCBClasseItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED){
            String gro = planningCBClasse.getSelectedItem().toString();
            String requete = "select dateSeance as Date,idSeance as ID, nomGroupe as Groupe, nomMatiere as Matiere,idSalle as Salle, debutSeance||'h' as Debut, debutSeance+2||'h' as Fin from Classe natural join Groupe natural join Avoir natural join Seance natural join Matiere where numPerso = "+numPerso+" and nomGroupe ='"+gro+"' order by dateSeance,debutSeance;";
            BaseDonneeUG.metDansJTable(requete,planningTab, 30,7);
        }
    }//GEN-LAST:event_planningCBClasseItemStateChanged

    private void jLabel45MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel45MouseClicked
        int logout = JOptionPane.showConfirmDialog(this, "Etes-vous sûr de vouloir vous déconnecter ?", "Log out", 0);
        this.pack();
        if (logout==JOptionPane.YES_OPTION)
        {
            this.dispose();
            Login page = new Login();
            page.setVisible(true); 
        }
    }//GEN-LAST:event_jLabel45MouseClicked

    private void matiereButAjouter1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_matiereButAjouter1MouseClicked
        try {
            String nomMatiere = matiereTF.getText();
            String elmt = matiereCBProf.getSelectedItem().toString();
            String requete = "select numProf from Professeur where numProf||' '||nomProf||' '||prenomProf ='"+elmt+"';";
            int numProf = BaseDonneeUG.recupere(requete);
            requete = "insert into Matiere values ('"+nomMatiere+"',"+numProf+")";
            BaseDonneeUG.executeDansDB(requete);
            afficheMatiere();
            String cla = classeCBClasse.getSelectedItem().toString();
            requete = "Select nomGroupe from Groupe natural join Classe where nomClasse||' Annee '||anneeClasse='"+cla+"';";
            BaseDonneeUG.metDansComboBox(requete,classeCBGroupe);
        } catch ( SQLException| NullPointerException e) {
            matiereLblErreur2.setText("Erreur dans la création de la matiere !");
            ActionListener effaceMessage = (ActionEvent evt1) -> {
                matiereLblErreur2.setText("");
            };
            Timer timer = new Timer(2000, effaceMessage);
            timer.setRepeats(false);
            timer.start();
        }
    }//GEN-LAST:event_matiereButAjouter1MouseClicked

    private void matiereButSupprimerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_matiereButSupprimerMouseClicked
        int ligne = matiereTabAssigner.getSelectedRow();
        String idGroupe = matiereTabAssigner.getValueAt(ligne,0).toString();
        String nomMatiere = matiereTabAssigner.getValueAt(ligne,2).toString();
        String requete = "delete from Enseigner where idGroupe = "+idGroupe+" and nomMatiere = '"+nomMatiere+"';";
        try{
            BaseDonneeUG.executeDansDB(requete);
            afficheMatiere();
            afficheMatiereAssigner();
            String gro = matiereCBGroupe2.getSelectedItem().toString();
            requete = "select nomMatiere from Matiere where nomMatiere not in (select nomMatiere from Enseigner natural join Groupe where nomGroupe ='"+gro+"');";
            BaseDonneeUG.metDansComboBox(requete,matiereCBMatiere);
        } catch (SQLException ex){
            System.err.println( ex.getClass().getName() + ": " + ex.getMessage() );
            System.exit(0);
        }
    }//GEN-LAST:event_matiereButSupprimerMouseClicked

    private void matiereButAjouterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_matiereButAjouterMouseClicked
        try {
            String elmt = matiereCBGroupe2.getSelectedItem().toString();
            String requete = "select idGroupe from Groupe where nomGroupe ='"+elmt+"';";
            int idGroupe = BaseDonneeUG.recupere(requete);
            String nomMatiere = matiereCBMatiere.getSelectedItem().toString();
            requete ="insert into Enseigner values ("+idGroupe+",'"+nomMatiere+"');";
            BaseDonneeUG.executeDansDB(requete);
            afficheMatiereAssigner();
            String gro = matiereCBGroupe2.getSelectedItem().toString();
            requete = "select nomMatiere from Matiere where nomMatiere not in (select nomMatiere from Enseigner natural join Groupe where nomGroupe ='"+gro+"');";
            BaseDonneeUG.metDansComboBox(requete,matiereCBMatiere);
        } catch ( SQLException| NullPointerException e) {
            matiereLblErreur1.setText("Erreur dans l'assignation de la matiere !");
            ActionListener effaceMessage = (ActionEvent evt1) -> {
                matiereLblErreur1.setText("");
            };
            Timer timer = new Timer(2000, effaceMessage);
            timer.setRepeats(false);
            timer.start();
        }
    }//GEN-LAST:event_matiereButAjouterMouseClicked

    private void matiereCBGroupe2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_matiereCBGroupe2ItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED){
            String gro = matiereCBGroupe2.getSelectedItem().toString();
            String requete = "select nomMatiere from Matiere where nomMatiere not in (select nomMatiere from Enseigner natural join Groupe where nomGroupe ='"+gro+"');";
            BaseDonneeUG.metDansComboBox(requete,matiereCBMatiere);
        }
    }//GEN-LAST:event_matiereCBGroupe2ItemStateChanged

    private void matiereButSupprimer1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_matiereButSupprimer1MouseClicked
        int ligne = matiereTab.getSelectedRow();
        String nomMatiere = matiereTab.getValueAt(ligne,0).toString();
        String numProf = matiereTab.getValueAt(ligne,2).toString();
        String requete = "delete from Matiere where nomMatiere ='"+nomMatiere+"' and numProf ="+numProf+";";
        try{
            BaseDonneeUG.executeDansDB(requete);
            afficheMatiere();
            afficheMatiereAssigner();
            String cla = classeCBClasse.getSelectedItem().toString();
            requete = "Select nomGroupe from Groupe natural join Classe where nomClasse||' Annee '||anneeClasse='"+cla+"';";
            BaseDonneeUG.metDansComboBox(requete,classeCBGroupe);
        } catch (SQLException ex){
            System.err.println( ex.getClass().getName() + ": " + ex.getMessage() );
            System.exit(0);
        }
    }//GEN-LAST:event_matiereButSupprimer1MouseClicked

    private void matiereCBGroupeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_matiereCBGroupeItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED){
            String gro = matiereCBGroupe.getSelectedItem().toString();
            String requete = "Select nomGroupe as Groupe, nomMatiere as Matiere, nomProf ||' '||prenomProf as Professeur from Classe natural join Groupe natural join Enseigner natural join Matiere natural join Professeur where numPerso = "+numPerso+" and nomGroupe = '"+gro+"' order by nomGroupe;";
            BaseDonneeUG.metDansJTable(requete,matiereTabAssigner,30,3);
        }
    }//GEN-LAST:event_matiereCBGroupeItemStateChanged

    private void matiereTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_matiereTFFocusGained
        matiereTF.setText("");
        matiereTF.setForeground(Color.black);
    }//GEN-LAST:event_matiereTFFocusGained

    private void matiereButSupprimer2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_matiereButSupprimer2MouseClicked
        int ligne = matiereTabProf.getSelectedRow();
        String numProf = matiereTabProf.getValueAt(ligne,0).toString();
        String requete = "delete from Professeur where numProf ="+numProf+";";
        try{
            BaseDonneeUG.executeDansDB(requete);
            afficheMatiere();
            afficheMatiereAssigner();
            requete = "select numProf||' '||nomProf||' '||prenomProf from Professeur;";
            BaseDonneeUG.metDansComboBox(requete, matiereCBProf);
            afficheProf();
        } catch (SQLException ex){
            System.err.println( ex.getClass().getName() + ": " + ex.getMessage() );
            System.exit(0);
        }
    }//GEN-LAST:event_matiereButSupprimer2MouseClicked

    private void matiereButAjouter2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_matiereButAjouter2MouseClicked
        try {
            String nom = matiereTFNom.getText();
            String prenom = matiereTFPrenom.getText();
            String sexe = matiereCBSexe.getSelectedItem().toString();
            String date = recupereDateMatiere();
            int id = BaseDonneeUG.recupere("select max(numProf)+1 from Professeur;");
            String requete ="insert into Professeur values ("+id+",'"+nom+"','"+prenom+"','"+sexe+"','"+date+"',null,null,null);";
            BaseDonneeUG.executeDansDB(requete);
            afficheProf();
            requete = "select numProf||' '||nomProf||' '||prenomProf from Professeur;";
            BaseDonneeUG.metDansComboBox(requete, matiereCBProf);
        } catch ( SQLException| NullPointerException e) {
            matiereLblErreur3.setText("Erreur dans la création du Professeur !");
            ActionListener effaceMessage = (ActionEvent evt1) -> {
                matiereLblErreur3.setText("");
            };
            Timer timer = new Timer(2000, effaceMessage);
            timer.setRepeats(false);
            timer.start();
        }
    }//GEN-LAST:event_matiereButAjouter2MouseClicked

    private String recupereDateMatiere(){
        Calendar date = matiereDate.getSelectedDate();
        String mois;
        if (date.get(Calendar.MONTH)+1<10){
            mois = "0"+(date.get(Calendar.MONTH)+1);
        } else {
            mois = ""+(date.get(Calendar.MONTH)+1);
        }
        String jour;
        if (date.get(Calendar.DAY_OF_MONTH)<10){
            jour = "0"+date.get(Calendar.DAY_OF_MONTH);
        } else {
            jour = ""+date.get(Calendar.DAY_OF_MONTH);
        }
        String dateReel= ""+date.get(Calendar.YEAR)+"-"+mois+"-"+jour;
        return dateReel;
    }
    
    private void matiereTFNomFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_matiereTFNomFocusGained
        matiereTFNom.setText("");
        matiereTFNom.setForeground(Color.black);
    }//GEN-LAST:event_matiereTFNomFocusGained

    private void matiereTFPrenomFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_matiereTFPrenomFocusGained
        matiereTFPrenom.setText("");
        matiereTFPrenom.setForeground(Color.black);
    }//GEN-LAST:event_matiereTFPrenomFocusGained
    private void resetCBGroupe(){
        String cla = classeCBClasse.getSelectedItem().toString();
        String requete = "Select nomGroupe from Groupe natural join Classe where nomClasse||' Annee '||anneeClasse='"+cla+"';";
        BaseDonneeUG.metDansComboBox(requete,classeCBGroupe);
    }
    private void metOngletAccueil(){
        classe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/persoImages/gestionClasses.png")));
        accueil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/persoImages/accueilClicked.png")));
        materiel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/persoImages/gestionMateriels.png")));
        matiere.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/persoImages/gestionMatieres.png")));
        planning.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/profImages/gestionPlanning.png")));
        String requete = "select nomEtu, prenomEtu, nomClasse, nomGroupe from Groupe natural join Eleve natural join Classe where numPerso = "+numPerso+" order by nomGroupe;";
        BaseDonneeUG.metDansJTable(requete,accueilTabEtu,30,4);
        requete = "select distinct nomMatiere as Matiere, nomProf||' '||prenomProf as Professeur, nomClasse||' Annee '||anneeClasse as Filiere from Professeur natural join Matiere natural join Enseigner natural join Groupe natural join Classe where numPerso ="+numPerso+";";
        BaseDonneeUG.metDansJTable(requete,accueilTabMatiere,30,3);
    }
    
    private void metOngletClasse(){
        classe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/persoImages/gestionClassesClicked.png")));
        accueil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/persoImages/accueil.png")));
        materiel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/persoImages/gestionMateriels.png")));
        matiere.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/persoImages/gestionMatieres.png")));
        planning.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/profImages/gestionPlanning.png")));
        resetCBEleve();
        resetCBClasse();
        resetCBGroupe();
        afficheClasse();
        afficheEleve();
        afficheTouteClasse();
        afficheGroupe();
    }
    
    private void resetCBEleve(){
        String requete = "select numEtu||' '||nomEtu||' '||prenomEtu from Eleve where idClasse is null;";
        BaseDonneeUG.metDansComboBox(requete,classeCBEtu);
    }
    private void resetCBClasse(){
        
        String requete = "Select nomClasse||' Annee '||anneeClasse from Classe where numPerso = "+numPerso+";";
        BaseDonneeUG.metDansComboBox(requete,classeCB);
        BaseDonneeUG.metDansComboBox(requete,classeCBClasse);
        BaseDonneeUG.metDansComboBox(requete,classeCBClasse2);
        BaseDonneeUG.metDansComboBox(requete,classeCBClasse3);
        
    }
    private void afficheEleve(){
        String requete = "select numEtu as ID, nomEtu as Nom, PrenomEtu as Prenom, sexeEtu as Sexe, dateNaisEtu as DateNaissance from Eleve where idClasse is null;";
        BaseDonneeUG.metDansJTable(requete, classeTabEtuLibre,50,5);
    }
    private void afficheClasse(){
        String requete = "select numEtu as ID, nomEtu as Nom, prenomEtu as Prenom, nomGroupe as Groupe from Groupe natural join Classe natural join Eleve where numPerso ="+numPerso+";";
        BaseDonneeUG.metDansJTable(requete,classeTabEtu,30,4);
    }
    
    private void afficheTouteClasse(){
        String requete = "select idClasse as ID, nomClasse as Nom, anneeClasse as Annee, nbGroupe as NbGroupes from Classe where numPerso = "+numPerso+";";
        BaseDonneeUG.metDansJTable(requete,classeTabClasse,30,4);
    }
    
    private void afficheGroupe(){
        String requete = "select idGroupe as ID, nomGroupe as Groupe, nomClasse||' annee '||anneeClasse as Classe from Groupe natural join Classe where numPerso = "+numPerso+";";
        BaseDonneeUG.metDansJTable(requete,classeTabGroupe,30,3);
    }
    
    private void metOngletMatiere(){
        classe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/persoImages/gestionClasses.png")));
        accueil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/persoImages/accueil.png")));
        materiel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/persoImages/gestionMateriels.png")));
        matiere.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/persoImages/gestionMatieresClicked.png")));
        planning.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/profImages/gestionPlanning.png")));
        String requete = "Select nomGroupe from Groupe natural join Classe where numPerso ="+numPerso+" order by nomGroupe;";
        BaseDonneeUG.metDansComboBox(requete, matiereCBGroupe);
        BaseDonneeUG.metDansComboBox(requete, matiereCBGroupe2);
        requete = "select numProf||' '||nomProf||' '||prenomProf from Professeur;";
        BaseDonneeUG.metDansComboBox(requete, matiereCBProf);
        afficheMatiere();
        afficheMatiereAssigner();
        afficheProf();
    }
    
    private void afficheMatiereAssigner(){
        String requete  = "select idGroupe as ID, nomGroupe as Groupe, nomMatiere as Matiere, nomProf ||' '||prenomProf as Professeur from Classe natural join Groupe natural join Enseigner natural join Matiere natural join Professeur where numPerso = "+numPerso+" order by nomGroupe;";
        BaseDonneeUG.metDansJTable(requete, matiereTabAssigner,30,4);
    }   
    
    private void afficheMatiere(){
        String requete = "select nomMatiere as Matiere, nomProf ||' '||prenomProf as Professeur, numProf as ID from Matiere natural join Professeur";
        BaseDonneeUG.metDansJTable(requete, matiereTab,30,3);
    }
    
    private void afficheProf(){
        String requete = "select numProf as ID, nomProf as Nom, prenomProf as Prenom, sexeProf as Sexe, dateNaisProf as DateNaissance from Professeur";
        BaseDonneeUG.metDansJTable(requete, matiereTabProf,30,5);
    }
    private void metOngletPlanning(){
        classe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/persoImages/gestionClasses.png")));
        accueil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/persoImages/accueil.png")));
        materiel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/persoImages/gestionMateriels.png")));
        matiere.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/persoImages/gestionMatieres.png")));
        planning.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/persoImages/gestionPlanningClicked.png")));
        String requete = "select nomGroupe from Groupe natural join Classe where numPerso="+numPerso+" order by nomGroupe;";
        BaseDonneeUG.metDansComboBox(requete,planningCBGroupe);
        affichePlanning();
        String date = recupereDate();
        String debut = planningCBDebut.getSelectedItem().toString();
        requete = "select distinct idSalle from Salle natural join Seance where idSalle not in (select idSalle from Seance where dateSeance ="+date+" and debutSeance="+debut+");";
        BaseDonneeUG.metDansComboBox(requete,planningCBSalle);
        requete = "select idSeance from Seance";
        BaseDonneeUG.metDansComboBox(requete,planningCBSeance);
        requete = "Select nomGroupe from Groupe natural join Classe where numPerso ="+numPerso+" order by nomGroupe;";
        BaseDonneeUG.metDansComboBox(requete, planningCBClasse);
    }
    
    private void affichePlanning(){
        String requete = "select dateSeance as Date,idSeance as ID, nomGroupe as Groupe, nomMatiere as Matiere,idSalle as Salle, debutSeance||'h' as Debut, debutSeance+2||'h' as Fin from Classe natural join Groupe natural join Avoir natural join Seance natural join Matiere where numPerso = "+numPerso+" order by dateSeance,debutSeance;";
        BaseDonneeUG.metDansJTable(requete,planningTab, 30,7);
    }
    private void metOngletMateriel(){
        classe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/persoImages/gestionClasses.png")));
        accueil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/persoImages/accueil.png")));
        materiel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/persoImages/gestionMaterielsClicked.png")));
        matiere.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/persoImages/gestionMatieres.png")));
        planning.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetbd1/profImages/gestionPlanning.png")));
        afficheMateriel();
    }
    
    private void afficheMateriel(){
        String requete = "select idReservation as ID, dateReservation as Date, nomMateriel as Materiel,nomProf||' '||prenomProf as Professeur, quantReser as Quantite from Reserver natural join Professeur;";
        BaseDonneeUG.metDansJTable(requete, materielTab, 15,5);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Personnel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Personnel(0).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClasseButAjouter2;
    private javax.swing.JLabel accueil;
    private javax.swing.JTable accueilTabEtu;
    private javax.swing.JTable accueilTabMatiere;
    private javax.swing.JLabel classe;
    private javax.swing.JButton classeButAjouter;
    private javax.swing.JButton classeButAjouter3;
    private javax.swing.JButton classeButLier;
    private javax.swing.JButton classeButSupprimer;
    private javax.swing.JButton classeButSupprimer2;
    private javax.swing.JButton classeButSupprimer3;
    private javax.swing.JButton classeButSupprimer4;
    private javax.swing.JComboBox<String> classeCB;
    private javax.swing.JComboBox<String> classeCBAnnee;
    private javax.swing.JComboBox<String> classeCBClasse;
    private javax.swing.JComboBox<String> classeCBClasse2;
    private javax.swing.JComboBox<String> classeCBClasse3;
    private javax.swing.JComboBox<String> classeCBEtu;
    private javax.swing.JComboBox<String> classeCBGroupe;
    private javax.swing.JComboBox<String> classeCBSexe;
    private datechooser.beans.DateChooserCombo classeDate;
    private javax.swing.JSpinner classeJSNbGroupe;
    private javax.swing.JLabel classeLblErreur;
    private javax.swing.JLabel classeLblErreur2;
    private javax.swing.JLabel classeLblErreur3;
    private javax.swing.JLabel classeLblErreur4;
    private javax.swing.JScrollPane classeScroll;
    private javax.swing.JTextField classeTFGroupe;
    private javax.swing.JTextField classeTFNom;
    private javax.swing.JTextField classeTFNomClasse;
    private javax.swing.JTextField classeTFPrenom;
    private javax.swing.JTable classeTabClasse;
    private javax.swing.JTable classeTabEtu;
    private javax.swing.JTable classeTabEtuLibre;
    private javax.swing.JTable classeTabGroupe;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTabbedPane mainPane;
    private javax.swing.JLabel materiel;
    private javax.swing.JButton materielButSupprimer;
    private javax.swing.JTable materielTab;
    private javax.swing.JLabel matiere;
    private javax.swing.JButton matiereButAjouter;
    private javax.swing.JButton matiereButAjouter1;
    private javax.swing.JButton matiereButAjouter2;
    private javax.swing.JButton matiereButSupprimer;
    private javax.swing.JButton matiereButSupprimer1;
    private javax.swing.JButton matiereButSupprimer2;
    private javax.swing.JComboBox<String> matiereCBGroupe;
    private javax.swing.JComboBox<String> matiereCBGroupe2;
    private javax.swing.JComboBox<String> matiereCBMatiere;
    private javax.swing.JComboBox<String> matiereCBProf;
    private javax.swing.JComboBox<String> matiereCBSexe;
    private datechooser.beans.DateChooserCombo matiereDate;
    private javax.swing.JLabel matiereLblErreur1;
    private javax.swing.JLabel matiereLblErreur2;
    private javax.swing.JLabel matiereLblErreur3;
    private javax.swing.JTextField matiereTF;
    private javax.swing.JTextField matiereTFNom;
    private javax.swing.JTextField matiereTFPrenom;
    private javax.swing.JTable matiereTab;
    private javax.swing.JTable matiereTabAssigner;
    private javax.swing.JTable matiereTabProf;
    private javax.swing.JLabel planning;
    private javax.swing.JButton planningButAjouter;
    private javax.swing.JButton planningButLier;
    private javax.swing.JButton planningButSupprimer;
    private javax.swing.JComboBox<String> planningCBClasse;
    private javax.swing.JComboBox<String> planningCBDebut;
    private javax.swing.JComboBox<String> planningCBGroupe;
    private javax.swing.JComboBox<String> planningCBGroupe2;
    private javax.swing.JComboBox<String> planningCBMatiere;
    private javax.swing.JComboBox<String> planningCBSalle;
    private javax.swing.JComboBox<String> planningCBSeance;
    private datechooser.beans.DateChooserCombo planningDate;
    private javax.swing.JLabel planningLblErreur;
    private javax.swing.JLabel planningLblErreur2;
    private javax.swing.JTable planningTab;
    // End of variables declaration//GEN-END:variables
}
